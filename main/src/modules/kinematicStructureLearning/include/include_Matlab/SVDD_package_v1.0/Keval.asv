function K = Keval(xr,xc,kernel,kern_param)

%=============== SVDD Kernel Function =================
% [Input]
%   xr,xc: training data
%   kernel: kernel type
%   kern_param: kernel parameter
% [Output]
%   K: calculated result
%
% Hyung jin Chang 06/13/2007
% hjchang@neuro.snu.ac.kr
%======================================================

[ndata, ndata, ndim] = size(xr);

x_buf = zeros(ndata,ndata,ndim);
x_norm = zeros(ndata,ndata);

for i=1:ndim
    x_buf(:,:,i) = (xr(:,:,i)-xc(:,:,i)).^2;
    x_norm = x_norm + x_buf;
end

x_buf1 = xr.^2;
x_buf2 = zeros(ndata,ndata);
for i=1:ndim
    x_buf2 = x_buf2 + x_buf(:,;,i);
end


switch kernel
    case 'gaussian'
        K = exp(-x_norm/(kern_param^2));
    case 'linear'
        K = sum(xr.^2,ndim);
    case 'polynomial'
        K = (sum(xr.^2,ndim)+1)^(kern_param);
    case 'sigmoid'
        K = tanh(sum(xr.^2,ndim)-kern_param);
    case 'erbf'
        K = exp(-sqrt(x_norm/(kern_param^2)));
    otherwise
end