function img_output = genMatchImages_object(cdata_P,cdata_Q,KineStruct_P, KineStruct_Q, data_source_P, data_source_Q, X, method)

height_normalised = 120;
width_normalised = 160;
depth_normalised = 50;

xImage = [0 width_normalised; 0 width_normalised] +  width_normalised/2;   %# The x data for the image corners
yImage = [depth_normalised depth_normalised; depth_normalised depth_normalised];             %# The y data for the image corners
zImage = [height_normalised height_normalised; 0 0] + height_normalised/2;   %# The z data for the image corners

ratio_height_P = height_normalised/ KineStruct_P.height;
ratio_width_P = width_normalised / KineStruct_P.width;
ratio_height_Q = height_normalised / KineStruct_Q.height;
ratio_width_Q = width_normalised/ KineStruct_Q.width;

%% Load Video
%===================================================================================
if (strcmp(data_source_P,'left') || strcmp(data_source_P,'right'))
    xyloObj_P = VideoReader([cdata_P.pathname, KineStruct_P.videoFileName]);
    mov(1).cdata = read(xyloObj_P, 1);
    img_P = rgb2gray(mov(1).cdata);
    img_acc_normalised_P = imresize(img_P, [height_normalised, width_normalised]);
end

if (strcmp(data_source_Q,'left') || strcmp(data_source_Q,'right'))
    xyloObj_Q = VideoReader([cdata_Q.pathname, KineStruct_Q.videoFileName]);
    mov(1).cdata = read(xyloObj_Q, 1);
    img_Q = rgb2gray(mov(1).cdata);
    img_acc_normalised_Q = imresize(img_Q, [height_normalised, width_normalised]);
end

%% Draw Image in 2D
%===================================================================================
% Drawing the connections with color segments
color_idx = 'rgbcmy';
% marker_idx = '+o*xsd^v><ph';
marker_idx = '............';

color_value = 0.99;

frm_idx_P = KineStruct_P.num_frames;
frm_idx_Q = KineStruct_Q.num_frames;

% for Graph P
if (strcmp(data_source_P,'left') || strcmp(data_source_P,'right'))
    h_buf_P = figure(101);
    iptsetpref('ImshowBorder','tight')
    imshow(img_acc_normalised_P);
    hold on
    
    for i=1:KineStruct_P.num_seg
        plot(KineStruct_P.y(1,KineStruct_P.seg_idx{i},frm_idx_P) * ratio_width_P,...
            KineStruct_P.y(2,KineStruct_P.seg_idx{i},frm_idx_P) * ratio_height_P,...
            marker_idx(mod(i,12)+1),'Color', color_idx(mod(i,6)+1),'MarkerSize',10, 'LineWidth',3);
    end
    
    % drawing connections for Graph P
    for m = 1:size(KineStruct_P.structure_i,1)
        joint_pts_buf = KineStruct_P.joint_center{KineStruct_P.structure_i(m),KineStruct_P.structure_j(m)};
        
        % Connection
        plot([KineStruct_P.seg_center(1,KineStruct_P.structure_i(m),frm_idx_P) * ratio_width_P, joint_pts_buf(1,frm_idx_P) * ratio_width_P],[KineStruct_P.seg_center(2,KineStruct_P.structure_i(m),frm_idx_P) * ratio_height_P, joint_pts_buf(2,frm_idx_P) * ratio_height_P],'-','Color',[color_value,color_value,color_value],'LineWidth',3);
        plot([KineStruct_P.seg_center(1,KineStruct_P.structure_j(m),frm_idx_P) * ratio_width_P, joint_pts_buf(1,frm_idx_P) * ratio_width_P],[KineStruct_P.seg_center(2,KineStruct_P.structure_j(m),frm_idx_P) * ratio_height_P, joint_pts_buf(2,frm_idx_P) * ratio_height_P],'-','Color',[color_value,color_value,color_value],'LineWidth',3);
        
        % Node
        plot([KineStruct_P.seg_center(1,KineStruct_P.structure_i(m),frm_idx_P) * ratio_width_P],[KineStruct_P.seg_center(2,KineStruct_P.structure_i(m),frm_idx_P) * ratio_height_P],'-ws',...
            'LineWidth',2,...
            'MarkerSize',11,...
            'MarkerEdgeColor',[color_value,color_value,color_value],...
            'MarkerFaceColor',[1.0,0.2,0.2]);
        plot([KineStruct_P.seg_center(1,KineStruct_P.structure_j(m),frm_idx_P) * ratio_width_P],[KineStruct_P.seg_center(2,KineStruct_P.structure_j(m),frm_idx_P) * ratio_height_P],'-ws',...
            'LineWidth',2,...
            'MarkerSize',11,...
            'MarkerEdgeColor',[color_value,color_value,color_value],...
            'MarkerFaceColor',[1.0,0.2,0.2]);
        
        % Joint
        plot(joint_pts_buf(1,frm_idx_P) * ratio_width_P, joint_pts_buf(2,frm_idx_P) * ratio_height_P,'wo',...
            'LineWidth',1,...
            'MarkerSize',7,...
            'MarkerEdgeColor',[color_value,color_value,color_value],...
            'MarkerFaceColor',[1.0,0.647,0.0]);
        plot(joint_pts_buf(1,frm_idx_P) * ratio_width_P, joint_pts_buf(2,frm_idx_P) * ratio_height_P,'wx',...
            'LineWidth',1,...
            'MarkerSize',7,...
            'MarkerEdgeColor',[color_value,color_value,color_value],...
            'MarkerFaceColor',[1.0,0.647,0.0]);
    end
    F_points_P = getframe(h_buf_P);
    F_points_P.cdata = imresize(F_points_P.cdata, [height_normalised, width_normalised]);
end

% for Graph Q
if (strcmp(data_source_Q,'left') || strcmp(data_source_Q,'right'))
    h_buf_Q = figure(102);
    iptsetpref('ImshowBorder','tight')
    imshow(img_acc_normalised_Q);
    hold on
    
    for i=1:KineStruct_Q.num_seg
        plot(KineStruct_Q.y(1,KineStruct_Q.seg_idx{i},frm_idx_Q) * ratio_width_Q,...
            KineStruct_Q.y(2,KineStruct_Q.seg_idx{i},frm_idx_Q) * ratio_height_Q,...
            marker_idx(mod(i,12)+1),'Color',color_idx(mod(i,6)+1),'MarkerSize',10, 'LineWidth',3);
    end
    
    % drawing connections for Graph Q
    for m = 1:size(KineStruct_Q.structure_i,1)
        joint_pts_buf = KineStruct_Q.joint_center{KineStruct_Q.structure_i(m),KineStruct_Q.structure_j(m)};
        
        % Connection
        plot([KineStruct_Q.seg_center(1,KineStruct_Q.structure_i(m),frm_idx_Q) * ratio_width_Q, shifted_dist + joint_pts_buf(1,frm_idx_Q) * ratio_width_Q],[KineStruct_Q.seg_center(2,KineStruct_Q.structure_i(m),frm_idx_Q) * ratio_height_Q, joint_pts_buf(2,frm_idx_Q) * ratio_height_Q],'-','Color',[color_value,color_value,color_value],'LineWidth',3);
        plot([KineStruct_Q.seg_center(1,KineStruct_Q.structure_j(m),frm_idx_Q) * ratio_width_Q, shifted_dist + joint_pts_buf(1,frm_idx_Q) * ratio_width_Q],[KineStruct_Q.seg_center(2,KineStruct_Q.structure_j(m),frm_idx_Q) * ratio_height_Q, joint_pts_buf(2,frm_idx_Q) * ratio_height_Q],'-','Color',[color_value,color_value,color_value],'LineWidth',3);
        
        % Node
        plot([KineStruct_Q.seg_center(1,KineStruct_Q.structure_i(m),frm_idx_Q) * ratio_width_Q],[KineStruct_Q.seg_center(2,KineStruct_Q.structure_i(m),frm_idx_Q) * ratio_height_Q],'-ws',...
            'LineWidth',2,...
            'MarkerSize',11,...
            'MarkerEdgeColor',[color_value,color_value,color_value],...
            'MarkerFaceColor',[1.0,0.2,0.2]);
        plot([KineStruct_Q.seg_center(1,KineStruct_Q.structure_j(m),frm_idx_Q) * ratio_width_Q],[KineStruct_Q.seg_center(2,KineStruct_Q.structure_j(m),frm_idx_Q) * ratio_height_Q],'-ws',...
            'LineWidth',2,...
            'MarkerSize',11,...
            'MarkerEdgeColor',[color_value,color_value,color_value],...
            'MarkerFaceColor',[1.0,0.2,0.2]);
        
        % Joint
        plot(joint_pts_buf(1,frm_idx_Q) * ratio_width_Q, joint_pts_buf(2,frm_idx_Q) * ratio_height_Q,'wo',...
            'LineWidth',1,...
            'MarkerSize',7,...
            'MarkerEdgeColor',[color_value,color_value,color_value],...
            'MarkerFaceColor',[1.0,0.647,0.0]);
        plot(joint_pts_buf(1,frm_idx_Q) * ratio_width_Q, joint_pts_buf(2,frm_idx_Q) * ratio_height_Q,'wx',...
            'LineWidth',1,...
            'MarkerSize',7,...
            'MarkerEdgeColor',[color_value,color_value,color_value],...
            'MarkerFaceColor',[1.0,0.647,0.0]);
    end
    F_points_Q = getframe(h_buf_Q);
    F_points_Q.cdata = imresize(F_points_Q.cdata, [height_normalised, width_normalised]);
end

%% Draw Image in 3D
%===================================================================================
numNode = 13;

connection = zeros(numNode, numNode);
connection(1,2) = 1;
connection(2,3) = 1;
connection(3,4) = 1;
connection(4,5) = 1;
connection(2,6) = 1;
connection(6,7) = 1;
connection(7,8) = 1;
connection(2,9) = 1;
connection(9,10) = 1;
connection(10,11) = 1;
connection(9,12) = 1;
connection(12,13) = 1;

ST = sparse(connection);
[idx_i, idx_j, value] = find(ST);

% frm_idx = min(frm_idx_P, frm_idx_Q);

h_result = figure(103);

iptsetpref('ImshowBorder','tight')
hold on
grid on

for frm_idx = 1:min(frm_idx_P, frm_idx_Q)
    
    frm_idx
    
%     clf
    
    % drawing connections for Graph P
    if (strcmp(data_source_P,'left') || strcmp(data_source_P,'right'))
        surf(xImage,yImage,zImage,...    %# Plot the surface
            'CData',F_points_P.cdata,...
            'FaceColor','texturemap');
        
    elseif strcmp(data_source_P,'kinect')
        for m = 1:size(KineStruct_P.structure_i,1)
            plot3(KineStruct_P.seg_center(1,:,frm_idx), KineStruct_P.seg_center(3,:,frm_idx), KineStruct_P.seg_center(2,:,frm_idx),'rs');
            
            for k = 1:nnz(ST)
                plot3([KineStruct_P.seg_center(1,idx_i(k),frm_idx), KineStruct_P.joint_center{idx_i(k),idx_j(k)}(1,frm_idx)],...
                    [KineStruct_P.seg_center(3,idx_i(k),frm_idx), KineStruct_P.joint_center{idx_i(k),idx_j(k)}(3,frm_idx)],...
                    [KineStruct_P.seg_center(2,idx_i(k),frm_idx), KineStruct_P.joint_center{idx_i(k),idx_j(k)}(2,frm_idx)],'k-');
                plot3([KineStruct_P.joint_center{idx_i(k),idx_j(k)}(1,frm_idx), KineStruct_P.seg_center(1,idx_j(k),frm_idx)],...
                    [KineStruct_P.joint_center{idx_i(k),idx_j(k)}(3,frm_idx), KineStruct_P.seg_center(3,idx_j(k),frm_idx)],...
                    [KineStruct_P.joint_center{idx_i(k),idx_j(k)}(2,frm_idx), KineStruct_P.seg_center(2,idx_j(k),frm_idx)],'k-');
                plot3(KineStruct_P.joint_center{idx_i(k),idx_j(k)}(1,frm_idx),...
                    KineStruct_P.joint_center{idx_i(k),idx_j(k)}(3,frm_idx),...
                    KineStruct_P.joint_center{idx_i(k),idx_j(k)}(2,frm_idx),'bo');
                plot3(KineStruct_P.joint_center{idx_i(k),idx_j(k)}(1,frm_idx),...
                    KineStruct_P.joint_center{idx_i(k),idx_j(k)}(3,frm_idx),...
                    KineStruct_P.joint_center{idx_i(k),idx_j(k)}(2,frm_idx),'bx');
            end
            plot3(KineStruct_P.object(1), KineStruct_P.object(3), KineStruct_P.object(2),'gp',...
                'MarkerSize',10,...
                'MarkerEdgeColor','g',...
                'MarkerFaceColor',[0.5,0.5,0.5])
            text(KineStruct_P.object(1), KineStruct_P.object(3), KineStruct_P.object(2)+6,'P', 'Color', 'm')
        end
    end
    
    % drawing connections for Graph Q
    if (strcmp(data_source_Q,'left') || strcmp(data_source_Q,'right'))
        surf(xImage,-1*yImage,zImage,...    %# Plot the surface
            'CData',F_points_Q.cdata,...
            'FaceColor','texturemap');
        
    elseif strcmp(data_source_Q,'kinect')
        for m = 1:size(KineStruct_Q.structure_i,1)
            plot3(KineStruct_Q.seg_center(1,:,frm_idx), -1*KineStruct_Q.seg_center(3,:,frm_idx), KineStruct_Q.seg_center(2,:,frm_idx),'rs');
            
            for k = 1:nnz(ST)
                plot3([KineStruct_Q.seg_center(1,idx_i(k),frm_idx),KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(1,frm_idx)],...
                    [-1*KineStruct_Q.seg_center(3,idx_i(k),frm_idx),-1*KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(3,frm_idx)],...
                    [KineStruct_Q.seg_center(2,idx_i(k),frm_idx),KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(2,frm_idx)],'k-');
                plot3([KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(1,frm_idx),KineStruct_Q.seg_center(1,idx_j(k),frm_idx)],...
                    [-1*KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(3,frm_idx),-1*KineStruct_Q.seg_center(3,idx_j(k),frm_idx)],...
                    [KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(2,frm_idx),KineStruct_Q.seg_center(2,idx_j(k),frm_idx)],'k-');
                plot3(KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(1,frm_idx),...
                    -1*KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(3,frm_idx),...
                    KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(2,frm_idx),'bo');
                plot3(KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(1,frm_idx),...
                    -1*KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(3,frm_idx),...
                    KineStruct_Q.joint_center{idx_i(k),idx_j(k)}(2,frm_idx),'bx');
            end
            plot3(KineStruct_Q.object(1), -1*KineStruct_Q.object(3), KineStruct_Q.object(2),'gp',...
                'MarkerSize',10,...
                'MarkerEdgeColor','g',...
                'MarkerFaceColor',[0.5,0.5,0.5])
            text(KineStruct_Q.object(1), -1*KineStruct_Q.object(3), KineStruct_Q.object(2)+6,'Q', 'Color', 'c')
        end
    end
    %% Draw matches
    %===================================================================================
    color_value = 0;
    for p = 1:size(X,1)
        for q = 1:size(X,2)
            if X(p,q) > 0
                if (strcmp(data_source_P,'left') || strcmp(data_source_P,'right')) && (strcmp(data_source_Q,'left') || strcmp(data_source_Q,'right'))
                    plot3([KineStruct_P.seg_center(1,p,frm_idx) * ratio_width_P + width_normalised/2, KineStruct_Q.seg_center(1,q,frm_idx) * ratio_width_Q + width_normalised/2],...
                        [depth_normalised, -1*depth_normalised],...
                        [KineStruct_P.seg_center(2,p,frm_idx) * ratio_height_P + height_normalised/2, KineStruct_Q.seg_center(2,q,frm_idx) * ratio_height_Q + height_normalised/2],'-','Color',[color_value,color_value,color_value],...
                        'LineWidth',2,...
                        'MarkerSize',5,...
                        'MarkerEdgeColor',[color_value,color_value,color_value],...
                        'MarkerFaceColor',[1.0,0.2,0.2]);
                    plot3([KineStruct_P.seg_center(1,p,frm_idx) * ratio_width_P + width_normalised/2, KineStruct_Q.seg_center(1,q,frm_idx) * ratio_width_Q + width_normalised/2],...
                        [depth_normalised, -1*depth_normalised],...
                        [KineStruct_P.seg_center(2,p,frm_idx) * ratio_height_P + height_normalised/2, KineStruct_Q.seg_center(2,q,frm_idx) * ratio_height_Q + height_normalised/2],'-y.',...
                        'LineWidth',1,...
                        'MarkerSize',5,...
                        'MarkerEdgeColor','y',...
                        'MarkerFaceColor',[1.0,0.2,0.2]);
                elseif (strcmp(data_source_P,'left') || strcmp(data_source_P,'right')) && (strcmp(data_source_Q,'kinect'))
                    plot3([KineStruct_P.seg_center(1,p,frm_idx) * ratio_width_P + width_normalised/2, KineStruct_Q.seg_center(1,q,frm_idx)],...
                        [depth_normalised, -1*KineStruct_Q.seg_center(3,q,frm_idx)],...
                        [height_normalised-KineStruct_P.seg_center(2,p,frm_idx) * ratio_height_P + height_normalised/2, KineStruct_Q.seg_center(2,q,frm_idx)],'-','Color',[color_value,color_value,color_value],...
                        'LineWidth',2,...
                        'MarkerSize',5,...
                        'MarkerEdgeColor',[color_value,color_value,color_value],...
                        'MarkerFaceColor',[1.0,0.2,0.2]);
                    plot3([KineStruct_P.seg_center(1,p,frm_idx) * ratio_width_P + width_normalised/2, KineStruct_Q.seg_center(1,q,frm_idx)],...
                        [depth_normalised, -1*KineStruct_Q.seg_center(3,q,frm_idx)],...
                        [height_normalised-KineStruct_P.seg_center(2,p,frm_idx) * ratio_height_P + height_normalised/2, KineStruct_Q.seg_center(2,q,frm_idx)],'-y.',...
                        'LineWidth',1,...
                        'MarkerSize',5,...
                        'MarkerEdgeColor','y',...
                        'MarkerFaceColor',[1.0,0.2,0.2]);
                elseif (strcmp(data_source_Q,'kinect')) && (strcmp(data_source_Q,'left') || strcmp(data_source_Q,'right'))
                    plot3([KineStruct_P.seg_center(1,p,frm_idx), KineStruct_Q.seg_center(1,q,frm_idx) * ratio_width_Q + width_normalised/2],...
                        [KineStruct_P.seg_center(3,p,frm_idx), -1*depth_normalised],...
                        [KineStruct_P.seg_center(2,p,frm_idx), KineStruct_Q.seg_center(2,q,frm_idx) * ratio_height_Q + height_normalised/2],'-','Color',[color_value,color_value,color_value],...
                        'LineWidth',2,...
                        'MarkerSize',5,...
                        'MarkerEdgeColor',[color_value,color_value,color_value],...
                        'MarkerFaceColor',[1.0,0.2,0.2]);
                    plot3([KineStruct_P.seg_center(1,p,frm_idx), KineStruct_Q.seg_center(1,q,frm_idx) * ratio_width_Q + width_normalised/2],...
                        [KineStruct_P.seg_center(3,p,frm_idx), -1*depth_normalised],...
                        [KineStruct_P.seg_center(2,p,frm_idx), KineStruct_Q.seg_center(2,q,frm_idx) * ratio_height_Q + height_normalised/2],'-y.',...
                        'LineWidth',1,...
                        'MarkerSize',5,...
                        'MarkerEdgeColor','y',...
                        'MarkerFaceColor',[1.0,0.2,0.2]);
                elseif strcmp(data_source_P,'kinect') && strcmp(data_source_Q,'kinect')
                    plot3([KineStruct_P.seg_center(1,p,frm_idx), KineStruct_Q.seg_center(1,q,frm_idx)],...
                        [KineStruct_P.seg_center(3,p,frm_idx), -1*KineStruct_Q.seg_center(3,q,frm_idx)],...
                        [KineStruct_P.seg_center(2,p,frm_idx), KineStruct_Q.seg_center(2,q,frm_idx)],'-','Color',[color_value,color_value,color_value],...
                        'LineWidth',2,...
                        'MarkerSize',5,...
                        'MarkerEdgeColor',[color_value,color_value,color_value],...
                        'MarkerFaceColor',[1.0,0.2,0.2]);
                    plot3([KineStruct_P.seg_center(1,p,frm_idx), KineStruct_Q.seg_center(1,q,frm_idx)],...
                        [KineStruct_P.seg_center(3,p,frm_idx), -1*KineStruct_Q.seg_center(3,q,frm_idx)],...
                        [KineStruct_P.seg_center(2,p,frm_idx), KineStruct_Q.seg_center(2,q,frm_idx)],'-y.',...
                        'LineWidth',1,...
                        'MarkerSize',5,...
                        'MarkerEdgeColor','y',...
                        'MarkerFaceColor',[1.0,0.2,0.2]);
                end
            end
        end
    end
    axis([0, 320, -200, 200, 0, 200]);
    %         view(140-view_idx,view_idx*0.1)
    view([frm_idx,frm_idx*0.1])
    pause(0.01)
end
%% Save result
%===================================================================================
iptsetpref('ImshowBorder','tight');
[SUCCESS,MESSAGE,MESSAGEID] = rmdir('result','s');
mkdir('result/images/correspondences');
result_save_folder_images_correspondences = 'result/images/correspondences/';
fig_save_name = [result_save_folder_images_correspondences,'output'];
% fig_save_name = ['result/realSeq/',KineStruct_P.videoFileName(1:end-4),'-',KineStruct_Q.videoFileName(1:end-4),'/',KineStruct_P.videoFileName(1:end-4),'-',KineStruct_Q.videoFileName(1:end-4),'-',method];

export_fig(fig_save_name,'-png');
% F_points = getframe(h_result);
% [fig_save_name,'.png']
% imwrite(F_points.cdata,[fig_save_name,'.png']);

img_before = imread([fig_save_name,'.png']);
img_after = imresize(img_before, [height_normalised, width_normalised*2]);
imwrite(img_after, [fig_save_name,'.png']);
%%
img_output = getimage;

end