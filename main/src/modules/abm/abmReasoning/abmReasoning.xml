<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="yarpmanifest.xsl"?>

<module>

  <name>abmReasoning</name>
  <doxygen-group>wysiwyd_modules</doxygen-group>
  <description>Reasoning module based on the autobiographical memory</description>
  <copypolicy>Released under the terms of the GNU GPL v2.0</copypolicy>
  <version>1.0</version>

  <description-long>
    Reasoning module. Extract information from the ELM (Episodic Like Memory) of the ABM, and analyze it to create knowledge. Knowledge can be use for action, or simulation/reasoning.
  </description-long>

  <arguments>
    <param default="abmReasoning" desc="To specify the module's name; all the open ports will be tagged with the prefix /name">name</param>
    <param default="icub" desc="To specify the robot's name">robot</param>
    <param desc="To specify for not having the module populating the OPC with spatialKnwoledge">noPopulate</param>
    <param desc="To specify for not having the module loading the semantic knowledge from ABM">noKnowledge</param>
    <param desc="To specify for not having the module loading the sentences from ABM">noSentences</param>
  </arguments>

  <authors>
    <author email="gregoire.pointeau@inserm.fr"> Gr√©goire Pointeau </author>
  </authors>

  <data>
    <input>
      <type>yarp::sig::Bottle</type>
      <port carrier="tcp">/abmHandler/rpc</port>
      <required>yes</required>
      <priority>no</priority>
      <description>
        rpc port of the module, main input. Get the keyword from the broadcast port. Gets inputs from : "/mainLoop/speechGrammar/keyword:o"
      </description>
    </input>

    <output>
      <type>yarp::sig::Bottle</type>
      <port carrier="tcp">/abmHandler/toABM</port>
      <description>
        Port to the autobiographicalMemory module: collect the raw data from the DB. To be connected to : "/autobiographicalMemory/request:i".
      </description>
    </output>

    <output>
      <type>yarp::sig::Bottle</type>
      <port carrier="tcp">/abmHandler/toSpeechRecog</port>
      <description>
        Port to communicate with the speech Recognizer: send the grammar and get the semantic bottle of the speech recognized. To be connected to "/speechRecognizer/rpc".
      </description>
    </output>

    <output>
      <type>yarp::sig::Bottle</type>
      <port carrier="tcp">/abmHandler/toOPCManager</port>
      <description>
        Port to communicate with the OPC manager to imagine the memory recalled. To be connected to "/opcManager/rpc".
      </description>
    </output>

  </data>
</module>

